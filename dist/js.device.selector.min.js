!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("DeviceSelector",[],t):"object"==typeof exports?exports.DeviceSelector=t():e.DeviceSelector=t()}(window,(function(){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(r,i,function(t){return e[t]}.bind(null,i));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t);var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();
/**
 * @fileOverview device selector
  Get the current Display and Device Type of a Browser
 * @author Simon Gattner <npm@0x38.de>
 * @license MIT
 * @version 1.0.1
 */
var i=function(){function e(t){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._defaults={selector:{name:"[data-device-selector]",items:{name:"[data-device-selector-item]"},parent:{name:"body"}},device:{selector:{name:"data-device-selector-devicetype"}},display:{selector:{name:"data-device-selector-displaytype"}}},this._options=t||{},this._settings=Object.assign({},this._defaults,this._options),this._items=document.querySelectorAll(this._settings.selector.parent.name+" "+this._settings.selector.name+" "+this._settings.selector.items.name),this._displayType=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:n._items&&n._items.length>0?Array.prototype.slice.call(n._items).filter((function(e){return(e.offsetWidth>0||e.offsetHeight>0)&&e.hasAttribute(n._settings.display.selector.name)})):null;return e&&e.length>0?""+e[0].getAttribute(n._settings.display.selector.name):void 0},this._deviceType=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:n._items&&n._items.length>0?Array.prototype.slice.call(n._items).filter((function(e){return(e.offsetWidth>0||e.offsetHeight>0)&&e.hasAttribute(n._settings.device.selector.name)})):null;return e&&e.length>0?""+e[0].getAttribute(n._settings.device.selector.name):void 0}}return r(e,[{key:"deviceType",get:function(){return this._deviceType}},{key:"displayType",get:function(){return this._displayType}}]),e}();t.default=i}]).default}));
//# sourceMappingURL=js.device.selector.min.js.map